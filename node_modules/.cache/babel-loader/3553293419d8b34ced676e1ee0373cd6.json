{"ast":null,"code":"var _jsxFileName = \"/Users/kobe/Documents/GitHub/Trivia-Battle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./Pages/Footer/Footer\";\nimport Home from \"./Pages/Home/Home\";\nimport Profile from \"./Pages/Profile/Profile\";\nimport Quiz from \"./Pages/Quiz/Quiz\";\nimport Result from \"./Pages/Result/Result\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [questions, setQuestions] = useState();\n  const [name, setName] = useState();\n  const [score, setScore] = useState(0);\n\n  const fetchQuestions = async function () {\n    let category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let difficulty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const {\n      data\n    } = await axios.get(`https://opentdb.com/api.php?amount=10${category && `&category=${category}`}${difficulty && `&difficulty=${difficulty}`}&type=multiple`);\n    setQuestions(data.results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            name: name,\n            setName: setName,\n            fetchQuestions: fetchQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quiz\",\n          element: /*#__PURE__*/_jsxDEV(Quiz, {\n            name: name,\n            questions: questions,\n            score: score,\n            setScore: setScore,\n            setQuestions: setQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/result\",\n          element: /*#__PURE__*/_jsxDEV(Result, {\n            name: name,\n            score: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YAL/pge1JlIaMv88HunabLc+upM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kobe/Documents/GitHub/Trivia-Battle/src/App.js"],"names":["axios","useState","BrowserRouter","Route","Routes","Header","Footer","Home","Profile","Quiz","Result","App","questions","setQuestions","name","setName","score","setScore","fetchQuestions","category","difficulty","data","get","results"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAQC,OAAR,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMiB,cAAc,GAAG,kBAA0C;AAAA,QAAnCC,QAAmC,uEAAxB,EAAwB;AAAA,QAApBC,UAAoB,uEAAP,EAAO;AAC/D,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMrB,KAAK,CAACsB,GAAN,CACpB,wCACCH,QAAQ,IAAK,aAAYA,QAAS,EACnC,GAAEC,UAAU,IAAK,eAAcA,UAAW,EAAE,gBAHxB,CAAvB;AAMAP,IAAAA,YAAY,CAACQ,IAAI,CAACE,OAAN,CAAZ;AACD,GARD;;AAUA,sBACE,QAAC,aAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eACrB,QAAC,IAAD;AACE,YAAA,IAAI,EAAET,IADR;AAEE,YAAA,OAAO,EAAEC,OAFX;AAGE,YAAA,cAAc,EAAEG;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,OAAO,eACzB,QAAC,IAAD;AACE,YAAA,IAAI,EAAEJ,IADR;AAEE,YAAA,SAAS,EAAEF,SAFb;AAGE,YAAA,KAAK,EAAEI,KAHT;AAIE,YAAA,QAAQ,EAAEC,QAJZ;AAKE,YAAA,YAAY,EAAEJ;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAmBE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,OAAO,eAC3B,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAEC,IAAd;AAAoB,YAAA,KAAK,EAAEE;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAuBE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,eAC5B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgCE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAnDQL,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./Pages/Footer/Footer\";\nimport Home from \"./Pages/Home/Home\";\nimport  Profile  from \"./Pages/Profile/Profile\";\nimport Quiz from \"./Pages/Quiz/Quiz\";\nimport Result from \"./Pages/Result/Result\";\n\nfunction App() {\n  const [questions, setQuestions] = useState();\n  const [name, setName] = useState();\n  const [score, setScore] = useState(0);\n\n  const fetchQuestions = async (category = \"\", difficulty = \"\") => {\n    const { data } = await axios.get(\n      `https://opentdb.com/api.php?amount=10${\n        category && `&category=${category}`\n      }${difficulty && `&difficulty=${difficulty}`}&type=multiple`\n    );\n\n    setQuestions(data.results);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element = {\n            <Home\n              name={name}\n              setName={setName}\n              fetchQuestions={fetchQuestions}\n            />\n          }>\n          </Route>\n          <Route path=\"/quiz\" element = {\n            <Quiz\n              name={name}\n              questions={questions}\n              score={score}\n              setScore={setScore}\n              setQuestions={setQuestions}\n            />\n          }>\n          </Route>\n          <Route path=\"/result\" element = {\n            <Result name={name} score={score} />\n          }>\n          </Route>\n          <Route path=\"/profile\" element = {\n            <Profile/>\n          }>\n          </Route>\n        </Routes>\n      </div>\n      <Footer  />\n    </BrowserRouter>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}